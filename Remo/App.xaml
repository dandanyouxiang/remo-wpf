<Application x:Class="Remo.App"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:data="clr-namespace:DataAccessLayer"
            xmlns:s="clr-namespace:System;assembly=mscorlib"
            xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
            StartupUri="PresentationLayer\Commands\WorkPlacePath.xaml">
            <!--StartupUri="ReportsLayer\GenerateReports.xaml">-->
  
    <Application.Resources>
        <DataTemplate x:Key="BlueHeader">
            <StackPanel Orientation="Horizontal" Margin="-5,-5,-5,-5" MinWidth="120" MaxWidth="200" HorizontalAlignment="Stretch" >
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF223B84" Offset="1"/>
                        <GradientStop Color="#FF57A0F4" Offset="0.5"/>
                        <GradientStop Color="#FF4B94EC" Offset="0.5"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
                <TextBlock Margin="10,10,10,10" Text="{Binding}" VerticalAlignment="Center"  Foreground="White"/>
        </StackPanel>
        </DataTemplate>
        <Style x:Key="GeneralStyle">
            <Setter Property="Control.FontFamily" Value="Tahoma" />
            <Setter Property="Control.FontSize" Value="16" />
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource GeneralStyle}">
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource GeneralStyle}">
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource GeneralStyle}">
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource GeneralStyle}">
        </Style>
        <Style TargetType="ListView" BasedOn="{StaticResource GeneralStyle}">
        </Style>
        <Style TargetType="Menu" BasedOn="{StaticResource GeneralStyle}"/>
        <data:PrePostFixConverter x:Key="OhmConvertor" Postfix="Ohm" Decimals="6" ConversionType="_double"/>
        <data:PrePostFixConverter x:Key="AmperConvertor" Postfix="A" Decimals="1" ConversionType="_double"/>
        <data:PrePostFixConverter x:Key="CelsiusConverter" Postfix="C" Decimals="1" ConversionType="_double"/>
        <data:PrePostFixConverter x:Key="PercConverter" Postfix="%" Decimals="3" ConversionType="_double"/>
        <data:PrePostFixConverter x:Key="SecondConvertor" Postfix="sec"  ConversionType="_int"/>
        <data:PrePostFixConverter x:Key="SecondConverter1" Postfix="s"  ConversionType="_int"/>
        <data:PrePostFixConverter x:Key="MinuteConvertor" Postfix="min" ConversionType="_int"/>
        <data:PrePostFixConverter x:Key="IntegerConvertor" ConversionType="_int"/>
        <data:PrePostFixConverter x:Key="PrePostFixConvertor"/>
        <data:ColorConvertor x:Key="ColorConvertor"/>
        <data:RegexValidator x:Key="CelsiusValidator" RegularExpression="^\s*[0-5]?\d\s*[C|c]?\s*$"/>

        <!--Brushes for the Toggle Buttons -->
        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Green"  Offset="0.0"/>
                    <GradientStop Color="LightGreen"  Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="StopBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FF9999" Offset="0.0"/>
                    <GradientStop Color="#EE8888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="OverBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#AAFFAA" Offset="0.0"/>
                    <GradientStop Color="#2C2" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="OverBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <!--
        <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton"  >
            <mwt:ButtonChrome ThemeColor="NormalColor" Fill="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True">
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </mwt:ButtonChrome>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsKeyboardFocused">
                    <Setter Property="mwt:ButtonChrome.RenderDefaulted" TargetName="Chrome">
                        <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked">
                    <Setter Property="mwt:ButtonChrome.RenderPressed" TargetName="Chrome">
                        <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                </Trigger>
            </ControlTemplate.Triggers>
            
        </ControlTemplate>
-->
        <DataTemplate x:Key="IsChackBackground">
            <StackPanel>
                <StackPanel.Background>
                    <LinearGradientBrush  StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="Green"  Offset="0.0"/>
                                <GradientStop Color="LightGreen"  Offset="1.0"/>
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </StackPanel.Background>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding}"/>
            </StackPanel>
        </DataTemplate>
        <!--
        <Style x:Key="StartStopStyle" TargetType="{x:Type ToggleButton}" >
            <Setter Property="Control.Template" Value="{StaticResource ToggleButtonTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="Stop"/>
                    <Setter Property="ContentTemplate" Value="{StaticResource IsChackBackground}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="Start"/>
                </Trigger>
            </Style.Triggers>
        </Style>
-->
        <ControlTemplate x:Key="OnOffTemplate" TargetType="{x:Type ToggleButton}">
            <Border 
                x:Name="Border"  
                CornerRadius="2" 
                BorderThickness="1"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}">
                <ContentPresenter 
                    Name="ContentPresenter"
                    Margin="{TemplateBinding Button.Padding}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RecognizesAccessKey="True"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush}" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource OverBorderBrush}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource StopBrush}" />
                    <Setter TargetName="ContentPresenter" Property="Content" Value="Stop"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="ContentPresenter" Property="Content" Value="Start"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <DataTemplate x:Key="dtHeader">
            <Grid>
                <StackPanel Orientation="Horizontal" Background="Gray">
                    <TextBlock Width="245" FontWeight="Bold" Text="Time"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="No"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="{Binding Path=ACHeatingTableHeader.T1}"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="{Binding Path=ACHeatingTableHeader.T2}"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="{Binding Path=ACHeatingTableHeader.T3}"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="{Binding Path=ACHeatingTableHeader.T4}"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="TAmb"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="TOil"></TextBlock>
                    <TextBlock Width="100" FontWeight="Bold" Text="TempRise"></TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>
        
    </Application.Resources>
</Application>
